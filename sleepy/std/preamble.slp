func print(Char char) { extern_func print_char(Char char); print_char(char); }
func print(Double double) { extern_func print_double(Double d); print_double(double); }
func print(Int int) { extern_func print_int(Int i); print_int(int); }
@Inline func print(Bool bool) { if bool { print('T'); } else { print('F'); } }
@Inline func print_line() { print('\n'); }
@Inline func print_line(Char|Double|Int|Bool line) { print(line); print_line(); }
extern_func flush();
@Inline func print_flush(Char|Double|Int|Bool text) { print(text); flush(); }
@Inline func print_line_flush(Char|Double|Int|Bool line) { print_line(line); flush(); }
extern_func allocate(Int size) -> DoublePtr;
extern_func deallocate(DoublePtr ptr);
extern_func load(DoublePtr ptr) -> Double;
extern_func store(DoublePtr prt, Double value);
extern_func assert(Bool condition);
@Inline func True() -> Bool { return 0 == 0; }
@Inline func False() -> Bool { return 0 != 0; }
@Inline func or(Bool a, Bool b) -> Bool { if a { return a; } else { return b; } }
@Inline func or(Bool a, Bool b, Bool c) -> Bool { return or(or(a, b), c); }
@Inline func and(Bool a, Bool b) -> Bool { if a { return b; } else { return False(); } }
@Inline func and(Bool a, Bool b, Bool c) -> Bool { return and(and(a, b), c); }
@Inline func not(Bool a) -> Bool { if (a) { return False(); } else { return True(); } }
